{"version":3,"sources":["containers/Reset/Reset.scss","containers/Reset/Reset.js"],"names":["module","exports","lightColor","darkColor","cardColor","blanc","rouge","vert","noir","gris","violet","focus","grisFonce","noirCD","blancSimple","jauneClair","attention","validation","validationHover","error","erreur","uiattention","standby","orange","Reset","state","newPassword","cpassword","isLoading","isError","reset_password_token","togglePasswordVisibility","_this","setState","pS","passwordVisible","send","e","preventDefault","length","Swal","fire","title","text","type","timer","passwdCheck","score","user","API","set_new_password","then","data","props","history","push","localStorage","setItem","token","setAuthToken","fetch_user","catch","console","log","response","handleChange","event","Object","_Users_tonyparker_Documents_github_karfur_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","target","id","value","upcoming","_this2","this","_","get","get_users","query","reset_password_expires","$gt","Date","now","users","_this$state","t","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","_components_FigmaUI_FButton_FButton__WEBPACK_IMPORTED_MODULE_20__","tag","NavLink","to","fill","variables","name","password_check","reactstrap__WEBPACK_IMPORTED_MODULE_8__","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","onSubmit","_components_FigmaUI_FInput_FInput__WEBPACK_IMPORTED_MODULE_21__","prepend","append","autoFocus","prependName","appendName","inputClassName","onAppendClick","placeholder","autoComplete","onChange","reactstrap__WEBPACK_IMPORTED_MODULE_11__","color","colorAvancement","disabled","react_router_dom__WEBPACK_IMPORTED_MODULE_13__","Component","mapDispatchToProps","track","page","dispatchOnMount","connect","withTranslation"],"mappings":"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","file":"static/js/7.124cea30.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"lightColor\":\"#F2F2F2\",\"darkColor\":\"#212121\",\"cardColor\":\"#828282\",\"blanc\":\"#FBFBFB\",\"rouge\":\"#E55039\",\"vert\":\"#2CA12A\",\"noir\":\"#212121\",\"gris\":\"#F2F2F2\",\"violet\":\"#583F93\",\"focus\":\"#2D9CDB\",\"grisFonce\":\"#828282\",\"noirCD\":\"#CDCDCD\",\"blancSimple\":\"#FFFFFF\",\"jauneClair\":\"#FFF7AE\",\"attention\":\"#F9EF99\",\"validation\":\"#DEF6C2\",\"validationHover\":\"#4CAF50\",\"error\":\"#F44336\",\"erreur\":\"#FFCECB\",\"uiattention\":\"#FFEB3B\",\"standby\":\"#FDD497\",\"orange\":\"#FF9800\"};","import React, { Component } from 'react';\nimport track from 'react-tracking';\nimport { Card, CardBody, Form, Progress } from 'reactstrap';\nimport Swal from 'sweetalert2';\nimport {NavLink} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { withTranslation } from 'react-i18next';\nimport _ from \"lodash\";\nimport passwdCheck from \"zxcvbn\";\n\nimport API from '../../utils/API';\nimport setAuthToken from '../../utils/setAuthToken';\nimport FButton from '../../components/FigmaUI/FButton/FButton';\nimport FInput from '../../components/FigmaUI/FInput/FInput';\nimport {fetch_user} from \"../../Store/actions\";\nimport { colorAvancement } from '../../components/Functions/ColorFunctions';\n\nimport './Reset.scss';\nimport variables from 'scss/colors.scss';\n\nclass Reset extends Component {\n  state = {\n    newPassword: \"\",\n    cpassword: \"\",\n    isLoading: true,\n    isError: false,\n    reset_password_token: \"\"\n  }\n\n  componentDidMount(){\n    const reset_password_token = _.get(this.props,\"match.params.id\");\n    if(!reset_password_token){return this.setState({isLoading: false, isError: true})}\n    API.get_users( { query: { reset_password_token, reset_password_expires: { $gt: Date.now() } } } ).then(data => {\n      const users = data.data.data;\n      if(users && users.length === 1){\n        this.setState({isLoading: false, reset_password_token});\n      }else{this.setState({isLoading: false, isError: true,})}\n    }).catch(e => {console.log(e); this.setState({isLoading: false, isError: true})})\n  }\n\n  togglePasswordVisibility = () => this.setState(pS=>({passwordVisible: !pS.passwordVisible}))\n\n  send = (e) => {\n    e.preventDefault();\n    if(this.state.newPassword.length === 0){\n      return Swal.fire( {title: 'Oops...', text: 'Aucun mot de passe n\\'est renseigné !', type: 'error', timer: 1500});\n    }\n    if(this.state.newPassword !== this.state.cpassword){\n      return Swal.fire( {title: 'Oops...', text: 'Les mots de passes ne correspondent pas !', type: 'error', timer: 1500});\n    }\n    if((passwdCheck(this.state.newPassword) || {}).score < 1){\n      return Swal.fire( {title: 'Oops...', text: 'Le mot de passe est trop faible', type: 'error', timer: 1500});\n    }\n    const user = {\n      newPassword : this.state.newPassword,\n      cpassword : this.state.cpassword,\n      reset_password_token : this.state.reset_password_token,\n    }\n    API.set_new_password(user).then(data => {\n      Swal.fire( {title: 'Yay...', text: 'Modification du mot de passe réussie !', type: 'success', timer: 1500} ).then(()=>{\n        this.props.history.push(\"/\")\n      });\n      localStorage.setItem('token', data.data.token);\n      setAuthToken(data.data.token);\n      this.props.fetch_user();\n    }).catch(e => console.log(e.response) )\n  }    \n\n  handleChange = event => this.setState({ [event.target.id]: event.target.value });\n\n  upcoming = () => Swal.fire( {title: 'Oh non!', text: 'Cette fonctionnalité n\\'est pas encore disponible', type: 'error', timer: 1500 })\n\n  render() {\n    const {passwordVisible, newPassword, cpassword, isLoading, isError} = this.state;\n    const { t } = this.props;\n    if(isLoading){\n      return (\n        <div className=\"loading-access\">\n          <h3>{t(\"Login.Chargement des données utilisateur\", \"Chargement des données utilisateur\")}...</h3>\n        </div>\n      )\n    }else if(isError){\n      return (\n        <div className=\"loading-access\">\n          <h5>{t(\"Login.Problème mdp\", \"Un problème est survenu au moment de réinitialiser le mot de passe. Merci d'essayer à nouveau\")}...</h5>\n          <FButton tag={NavLink} to=\"/login\" fill={variables.noir} name=\"arrow-back-outline\">\n            {t(\"Login.Revenir à la page de connexion\", \"Revenir à la page de connexion\")}\n          </FButton>\n        </div>\n      )\n    }else{\n      const password_check = newPassword && passwdCheck(newPassword);\n      return (\n        <div className=\"app flex-row align-items-center reset\">\n          <div className=\"login-wrapper\">\n            <Card className=\"card-login main-card\">\n              <CardBody>\n                <Form onSubmit={this.send}>\n                  <h5>\n                    {t(\"Login.Réinitialisez votre mot de passe\", \"Réinitialisez votre mot de passe\")}\n                  </h5>\n                  <div className=\"texte-small mb-12\">\n                    {t(\"Login.Renseignez ici le nouveau mot de passe souhaité\", \"Renseignez ici le nouveau mot de passe souhaité\")}\n                  </div>\n                  <FInput\n                    prepend append autoFocus\n                    prependName=\"lock-outline\"\n                    appendName={passwordVisible ? \"eye-off-2-outline\" : \"eye-outline\"}\n                    type={passwordVisible ? \"text\" : \"password\"} \n                    inputClassName=\"password-input\"\n                    onAppendClick={this.togglePasswordVisibility}\n                    id=\"newPassword\"\n                    placeholder={t(\"Login.Nouveau mot de passe\", \"Nouveau mot de passe\")} \n                    autoComplete=\"new-password\" \n                    value={newPassword}\n                    onChange={this.handleChange}\n                  />\n                  {newPassword && password_check && \n                    <div className=\"score-wrapper mb-10\">\n                      <span className=\"mr-10\">{t(\"Login.Force\", \"Force\")} :</span>\n                      <Progress \n                        color={colorAvancement(password_check.score/4)} \n                        value={(0.1+(password_check.score/4))*100/1.1} \n                      />\n                    </div>}\n                  <FInput\n                    prepend append\n                    prependName=\"lock-outline\"\n                    appendName={passwordVisible ? \"eye-off-2-outline\" : \"eye-outline\"}\n                    inputClassName=\"password-input\"\n                    type={passwordVisible ? \"text\" : \"password\"} \n                    onAppendClick={this.togglePasswordVisibility}\n                    id=\"cpassword\"\n                    placeholder={t(\"Login.Confirmez le nouveau mot de passe\", \"Confirmez le nouveau mot de passe\")} \n                    autoComplete=\"cpassword\" \n                    value={cpassword}\n                    onChange={this.handleChange}\n                  />\n                  <div className=\"footer-buttons\">\n                    <FButton type=\"dark\" name=\"log-in\" color=\"dark\" className=\"connect-btn\" disabled={!newPassword}>\n                      {t(\"Valider\", \"Valider\")}\n                    </FButton>\n                  </div>\n                </Form>\n              </CardBody>\n            </Card>\n            <NavLink to=\"/\">\n              <FButton type=\"outline\" name=\"corner-up-left-outline\" className=\"retour-btn\">\n                {t(\"Login.Retour à l'accueil\", \"Retour à l'accueil\")}\n              </FButton>\n            </NavLink>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nconst mapDispatchToProps = {fetch_user};\n\nexport default track({\n  page: 'Reset',\n}, { dispatchOnMount: true })(\n  connect(null, mapDispatchToProps)(\n      withTranslation()(Reset)\n  )\n);\n"],"sourceRoot":""}