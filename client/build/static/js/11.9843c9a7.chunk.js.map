{"version":3,"sources":["components/UI/LiveChat/messageHistory.js","components/UI/LiveChat/LiveChat.js"],"names":["messageHistory","type","author","data","text","emoji","LiveChat","state","messageList","newMessagesCount","isOpen","_this2","this","props","socket","on","msg","setState","concat","Object","toConsumableArray","message","socketFn","sendMessage","fileList","objectURL","window","URL","createObjectURL","url","fileName","name","length","_this3","tracking","trackEvent","action","label","value","react_default","a","createElement","className","es","agentProfile","teamName","imageUrl","onMessageWasSent","_onMessageWasSent","bind","onFilesSelected","_onFilesSelected","handleClick","_handleClick","showEmoji","Component","track","component","dispatchOnMount"],"mappings":"0NAAeA,EAAA,CACb,CAACC,KAAM,OAAQC,OAAQ,KAAMC,KAAM,CAAEC,KAAM,YAC3C,CAACH,KAAM,OAAQC,OAAQ,OAAQC,KAAM,CAAEC,KAAM,WAC7C,CAACH,KAAM,OAAQC,OAAQ,KAAMC,KAAM,CAAEC,KAAM,yBAC3C,CAACH,KAAM,OAAQC,OAAQ,OAAQC,KAAM,CAAEC,KAAM,sCAC7C,CAACH,KAAM,OAAQC,OAAQ,KAAMC,KAAM,CAAEC,KAAM,gBAC3C,CAACH,KAAM,OAAQC,OAAQ,OAAQC,KAAM,CAAEC,KAAM,oBAC7C,CAACH,KAAM,OAAQC,OAAQ,KAAMC,KAAM,CAAEC,KAAM,6BAC3C,CAACH,KAAM,OAAQC,OAAQ,OAAQC,KAAM,CAAEC,KAAM,yBAC7C,CAACH,KAAM,OAAQC,OAAQ,KAAMC,KAAM,CAAEC,KAAM,6BAC3C,CAACH,KAAM,OAAQC,OAAQ,OAAQC,KAAM,CAAEC,KAAM,iBAC7C,CAACH,KAAM,OAAQC,OAAQ,KAAMC,KAAM,CAAEC,KAAM,uBAC3C,CAACH,KAAM,QAASC,OAAQ,KAAMC,KAAM,CAAEE,MAAO,kBCLzCC,sNACJC,MAAQ,CACNC,YAAaR,EACbS,iBAAkB,EAClBC,QAAQ,sFAGU,IAAAC,EAAAC,KAClBA,KAAKC,MAAMC,OAAOC,GAAG,cAAe,SAAAC,GACpB,aAAXA,EAAIf,MACLU,EAAKM,SAAS,CACZT,YAAW,GAAAU,OAAAC,OAAAC,EAAA,EAAAD,CAAMR,EAAKJ,MAAMC,aAAjB,CAA8BQ,IACzCP,iBAAmBE,EAAKJ,MAAME,iBAAkB,gDAMtCY,GAChBA,EAAQnB,OAAO,OACfmB,EAAQpB,KAAK,WACbW,KAAKC,MAAMS,SAASC,YAAYF,EAAS,mDAG1BG,GACf,IAAMC,EAAYC,OAAOC,IAAIC,gBAAgBJ,EAAS,IACtDZ,KAAKK,SAAS,CACZT,YAAW,GAAAU,OAAAC,OAAAC,EAAA,EAAAD,CAAMP,KAAKL,MAAMC,aAAjB,CAA8B,CACvCP,KAAM,OAAQC,OAAQ,KACtBC,KAAM,CACJ0B,IAAKJ,EACLK,SAAUN,EAAS,GAAGO,gDAMjB3B,GACX,GAAIA,EAAK4B,OAAS,EAAG,CACnB,IAAMvB,EAAmBG,KAAKL,MAAMG,OAASE,KAAKL,MAAME,iBAAmBG,KAAKL,MAAME,iBAAmB,EACzGG,KAAKK,SAAS,CACZR,iBAAkBA,EAClBD,YAAW,GAAAU,OAAAC,OAAAC,EAAA,EAAAD,CAAMP,KAAKL,MAAMC,aAAjB,CAA8B,CACvCN,OAAQ,OACRD,KAAM,OACNE,KAAM,CAAEC,qDAMD,IAAA6B,EAAArB,KACbA,KAAKK,SAAS,CACZP,QAASE,KAAKL,MAAMG,OACpBD,iBAAkB,GAClB,WACAwB,EAAKpB,MAAMqB,SAASC,WAAW,CAAEC,OAAQ,QAASC,MAAO,SAAUC,MAAQL,EAAK1B,MAAMG,4CAKtF,OACE6B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEC,aAAc,CACZC,SAAU,mCACVC,SAAU,mEAGZC,iBAAkBnC,KAAKoC,kBAAkBC,KAAKrC,MAC9CsC,gBAAiBtC,KAAKuC,iBAAiBF,KAAKrC,MAC5CJ,YAAaI,KAAKL,MAAMC,YACxBC,iBAAkBG,KAAKL,MAAME,iBAC7B2C,YAAaxC,KAAKyC,aAAaJ,KAAKrC,MACpCF,OAAQE,KAAKL,MAAMG,OACnB4C,WAAS,YA3EEC,cAkFRC,cAAM,CACnBC,UAAW,YACV,CAAEC,iBAAiB,GAFPF,CAEelD","file":"static/js/11.9843c9a7.chunk.js","sourcesContent":["export default [\n  {type: 'text', author: \"me\", data: { text: \"Bonjour\"} },\n  {type: 'text', author: \"them\", data: { text: \"Ca va?\"} },\n  {type: 'text', author: \"me\", data: { text: \"Tu me passes le sel?\"} },\n  {type: 'text', author: \"them\", data: { text: \"J'adore me regarder dans la glace\"} },\n  {type: 'text', author: \"me\", data: { text: \"Vive le PSG\"} },\n  {type: 'text', author: \"them\", data: { text: \"On mange oÃ¹?\"} },\n  {type: 'text', author: \"me\", data: { text: \"C'est par oÃ¹ le CADA?\"} },\n  {type: 'text', author: \"them\", data: { text: \"Je veux plus de pain\"} },\n  {type: 'text', author: \"me\", data: { text: \"La France, Terre d'asile\"} },\n  {type: 'text', author: \"them\", data: { text: \"Yeah, right.\"} },\n  {type: 'text', author: \"me\", data: { text: \"Je suis sÃ©rieux\"} },\n  {type: 'emoji', author: \"me\", data: { emoji: \"ðŸ˜‹\"} }\n]","import React, {Component} from 'react';\nimport {Launcher} from 'react-chat-window';\nimport track from 'react-tracking';\n\nimport messageHistory from './messageHistory';\nimport './LiveChat.css';\n\nclass LiveChat extends Component {\n  state = {\n    messageList: messageHistory,\n    newMessagesCount: 0,\n    isOpen: false\n  };\n\n  componentDidMount() {    \n    this.props.socket.on('MessageSent', msg => {\n      if(msg.type==='livechat'){\n        this.setState({\n          messageList: [...this.state.messageList, msg],\n          newMessagesCount : this.state.newMessagesCount +1\n        });\n      }\n    });\n  }\n\n  _onMessageWasSent(message) {\n    message.author='them';\n    message.type='livechat';\n    this.props.socketFn.sendMessage(message, 'client');\n  }\n\n  _onFilesSelected(fileList) {\n    const objectURL = window.URL.createObjectURL(fileList[0]);\n    this.setState({\n      messageList: [...this.state.messageList, {\n        type: 'file', author: \"me\",\n        data: {\n          url: objectURL,\n          fileName: fileList[0].name\n        }\n      }]\n    })\n  }\n\n  _sendMessage(text) {\n    if (text.length > 0) {\n      const newMessagesCount = this.state.isOpen ? this.state.newMessagesCount : this.state.newMessagesCount + 1\n      this.setState({\n        newMessagesCount: newMessagesCount,\n        messageList: [...this.state.messageList, {\n          author: 'them',\n          type: 'text',\n          data: { text }\n        }]\n      })\n    }\n  }\n\n  _handleClick() {\n    this.setState({\n      isOpen: !this.state.isOpen,\n      newMessagesCount: 0\n    },()=>{\n      this.props.tracking.trackEvent({ action: 'click', label: 'isOpen', value : this.state.isOpen });\n    })\n  }\n\n  render() {\n      return (\n        <div className=\"myLiveChat\">\n          <Launcher\n            agentProfile={{\n              teamName: 'FenÃªtre de discussion Karfu\\'R',\n              imageUrl: 'https://a.slack-edge.com/66f9/img/avatars-teams/ava_0001-34.png'\n            }} \n            //https://entrepreneur-interet-general.etalab.gouv.fr//img/communaute/soufiane-lamrissi.png\n            onMessageWasSent={this._onMessageWasSent.bind(this)}\n            onFilesSelected={this._onFilesSelected.bind(this)}\n            messageList={this.state.messageList}\n            newMessagesCount={this.state.newMessagesCount}\n            handleClick={this._handleClick.bind(this)}\n            isOpen={this.state.isOpen}\n            showEmoji\n          />\n        </div>\n      )\n  }\n}\n\nexport default track({\n  component: 'LiveChat',\n}, { dispatchOnMount: true })(LiveChat);"],"sourceRoot":""}