{"version":3,"sources":["../node_modules/react-transition-group/Transition.js","../node_modules/react-transition-group/utils/PropTypes.js","../node_modules/react-transition-group/TransitionGroup.js","../node_modules/react-transition-group/index.js","../node_modules/react-transition-group/CSSTransition.js","../node_modules/react-transition-group/ReplaceTransition.js","../node_modules/react-transition-group/utils/ChildMapping.js"],"names":["exports","__esModule","default","EXITING","ENTERED","ENTERING","EXITED","UNMOUNTED","PropTypes","obj","newObj","key","Object","prototype","hasOwnProperty","call","desc","defineProperty","getOwnPropertyDescriptor","get","set","_interopRequireWildcard","__webpack_require__","_react","_interopRequireDefault","_reactDom","_reactLifecyclesCompat","Transition","_React$Component","subClass","superClass","props","context","_this","this","initialStatus","parentGroup","transitionGroup","appear","isMounting","enter","appearStatus","in","unmountOnExit","mountOnEnter","state","status","nextCallback","create","constructor","__proto__","_proto","getChildContext","getDerivedStateFromProps","_ref","prevState","componentDidMount","updateStatus","componentDidUpdate","prevProps","nextStatus","componentWillUnmount","cancelNextCallback","getTimeouts","exit","timeout","undefined","mounting","node","findDOMNode","performEnter","performExit","setState","_this2","appearing","timeouts","enterTimeout","onEnter","safeSetState","onEntering","onTransitionEnd","onEntered","_this3","onExit","onExiting","onExited","cancel","nextState","callback","setNextCallback","_this4","active","event","handler","doesNotHaveTimeoutOrListener","addEndListener","setTimeout","render","_this$props","children","childProps","source","excluded","i","target","sourceKeys","keys","length","indexOf","_objectWithoutPropertiesLoose","child","Children","only","cloneElement","Component","noop","contextTypes","object","childContextTypes","propTypes","defaultProps","_default","polyfill","classNamesShape","timeoutsShape","_propTypes","_ChildMapping","_extends","assign","arguments","apply","_assertThisInitialized","self","ReferenceError","values","map","k","TransitionGroup","handleExited","bind","firstRender","appeared","mounted","nextProps","prevChildMapping","getInitialChildMapping","getNextChildMapping","currentChildMapping","getChildMapping","component","childFactory","createElement","isRequired","module","_CSSTransition","_ReplaceTransition","_TransitionGroup","_Transition","ReplaceTransition","CSSTransition","_addClass","_removeClass","addClass","classes","split","forEach","c","removeClass","_len","args","Array","_key","concat","className","getClassNames","removeClasses","activeClassName","reflowAndAddClass","appearClassName","doneClassName","enterClassName","type","classNames","isStringClassNames","_this$getClassNames6","scrollTop","_args","handleEnter","_len2","_key2","handleLifecycle","handleEntering","_len3","_key3","handleEntered","_len4","_key4","handleExit","_len5","_key5","handleExiting","_len6","_key6","_len7","_key7","idx","originalArgs","_child$props","toArray","inProp","_React$Children$toArr","first","second","mergeChildMappings","getProp","nextChildMapping","isValidElement","hasPrev","hasNext","prevChild","isLeaving","mapFn","result","mapper","prev","next","getValueForKey","nextKeysPending","pendingKeys","prevKey","push","childMapping","nextKey","pendingNextKey","prop"],"mappings":"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","file":"static/js/4.ca83ff0f.chunk.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = exports.EXITING = exports.ENTERED = exports.ENTERING = exports.EXITED = exports.UNMOUNTED = void 0;\n\nvar PropTypes = _interopRequireWildcard(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\n\nvar _reactLifecyclesCompat = require(\"react-lifecycles-compat\");\n\nvar _PropTypes = require(\"./utils/PropTypes\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar UNMOUNTED = 'unmounted';\nexports.UNMOUNTED = UNMOUNTED;\nvar EXITED = 'exited';\nexports.EXITED = EXITED;\nvar ENTERING = 'entering';\nexports.ENTERING = ENTERING;\nvar ENTERED = 'entered';\nexports.ENTERED = ENTERED;\nvar EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 0 },\n *   entered:  { opacity: 1 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nexports.EXITING = EXITING;\n\nvar Transition =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context.transitionGroup; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  var _proto = Transition.prototype;\n\n  _proto.getChildContext = function getChildContext() {\n    return {\n      transitionGroup: null // allows for nested Transitions\n\n    };\n  };\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  }; // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      var node = _reactDom.default.findDOMNode(this);\n\n      if (nextStatus === ENTERING) {\n        this.performEnter(node, mounting);\n      } else {\n        this.performExit(node);\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(node, mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context.transitionGroup ? this.context.transitionGroup.isMounting : mounting;\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(node);\n      });\n      return;\n    }\n\n    this.props.onEnter(node, appearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(node, appearing);\n\n      _this2.onTransitionEnd(node, enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(node, appearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit(node) {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts(); // no exit animation skip right to EXITED\n\n    if (!exit) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(node);\n      });\n      return;\n    }\n\n    this.props.onExit(node);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(node);\n\n      _this3.onTransitionEnd(node, timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(node);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(node, timeout, handler) {\n    this.setNextCallback(handler);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      this.props.addEndListener(node, this.nextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\"]); // filter props for Transtition\n\n\n    delete childProps.in;\n    delete childProps.mountOnEnter;\n    delete childProps.unmountOnExit;\n    delete childProps.appear;\n    delete childProps.enter;\n    delete childProps.exit;\n    delete childProps.timeout;\n    delete childProps.addEndListener;\n    delete childProps.onEnter;\n    delete childProps.onEntering;\n    delete childProps.onEntered;\n    delete childProps.onExit;\n    delete childProps.onExiting;\n    delete childProps.onExited;\n\n    if (typeof children === 'function') {\n      return children(status, childProps);\n    }\n\n    var child = _react.default.Children.only(children);\n\n    return _react.default.cloneElement(child, childProps);\n  };\n\n  return Transition;\n}(_react.default.Component);\n\nTransition.contextTypes = {\n  transitionGroup: PropTypes.object\n};\nTransition.childContextTypes = {\n  transitionGroup: function transitionGroup() {}\n};\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`, `'unmounted'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * Normally a component is not transitioned if it is shown when the `<Transition>` component mounts.\n   * If you want to transition on the first mount set `appear` to `true`, and the\n   * component will transition in as soon as the `<Transition>` mounts.\n   *\n   * > Note: there are no specific \"appear\" states. `appear` only adds an additional `enter` transition.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = _PropTypes.timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. **Note:** Timeouts are still used as a fallback if provided.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func // Name the function so it is clearer in the documentation\n\n} : {};\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = 0;\nTransition.EXITED = 1;\nTransition.ENTERING = 2;\nTransition.ENTERED = 3;\nTransition.EXITING = 4;\n\nvar _default = (0, _reactLifecyclesCompat.polyfill)(Transition);\n\nexports.default = _default;","\"use strict\";\n\nexports.__esModule = true;\nexports.classNamesShape = exports.timeoutsShape = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar timeoutsShape = process.env.NODE_ENV !== 'production' ? _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({\n  enter: _propTypes.default.number,\n  exit: _propTypes.default.number,\n  appear: _propTypes.default.number\n}).isRequired]) : null;\nexports.timeoutsShape = timeoutsShape;\nvar classNamesShape = process.env.NODE_ENV !== 'production' ? _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.shape({\n  enter: _propTypes.default.string,\n  exit: _propTypes.default.string,\n  active: _propTypes.default.string\n}), _propTypes.default.shape({\n  enter: _propTypes.default.string,\n  enterDone: _propTypes.default.string,\n  enterActive: _propTypes.default.string,\n  exit: _propTypes.default.string,\n  exitDone: _propTypes.default.string,\n  exitActive: _propTypes.default.string\n})]) : null;\nexports.classNamesShape = classNamesShape;","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactLifecyclesCompat = require(\"react-lifecycles-compat\");\n\nvar _ChildMapping = require(\"./utils/ChildMapping\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nvar values = Object.values || function (obj) {\n  return Object.keys(obj).map(function (k) {\n    return obj[k];\n  });\n};\n\nvar defaultProps = {\n  component: 'div',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n  /**\n   * The `<TransitionGroup>` component manages a set of transition components\n   * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition\n   * components, `<TransitionGroup>` is a state machine for managing the mounting\n   * and unmounting of components over time.\n   *\n   * Consider the example below. As items are removed or added to the TodoList the\n   * `in` prop is toggled automatically by the `<TransitionGroup>`.\n   *\n   * Note that `<TransitionGroup>`  does not define any animation behavior!\n   * Exactly _how_ a list item animates is up to the individual transition\n   * component. This means you can mix and match animations across different list\n   * items.\n   */\n\n};\n\nvar TransitionGroup =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n\n    var handleExited = _this.handleExited.bind(_assertThisInitialized(_assertThisInitialized(_this))); // Initial children should all be entering, dependent on appear\n\n\n    _this.state = {\n      handleExited: handleExited,\n      firstRender: true\n    };\n    return _this;\n  }\n\n  var _proto = TransitionGroup.prototype;\n\n  _proto.getChildContext = function getChildContext() {\n    return {\n      transitionGroup: {\n        isMounting: !this.appeared\n      }\n    };\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.appeared = true;\n    this.mounted = true;\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n  };\n\n  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {\n    var prevChildMapping = _ref.children,\n        handleExited = _ref.handleExited,\n        firstRender = _ref.firstRender;\n    return {\n      children: firstRender ? (0, _ChildMapping.getInitialChildMapping)(nextProps, handleExited) : (0, _ChildMapping.getNextChildMapping)(nextProps, prevChildMapping, handleExited),\n      firstRender: false\n    };\n  };\n\n  _proto.handleExited = function handleExited(child, node) {\n    var currentChildMapping = (0, _ChildMapping.getChildMapping)(this.props.children);\n    if (child.key in currentChildMapping) return;\n\n    if (child.props.onExited) {\n      child.props.onExited(node);\n    }\n\n    if (this.mounted) {\n      this.setState(function (state) {\n        var children = _extends({}, state.children);\n\n        delete children[child.key];\n        return {\n          children: children\n        };\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component = _this$props.component,\n        childFactory = _this$props.childFactory,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"childFactory\"]);\n\n    var children = values(this.state.children).map(childFactory);\n    delete props.appear;\n    delete props.enter;\n    delete props.exit;\n\n    if (Component === null) {\n      return children;\n    }\n\n    return _react.default.createElement(Component, props, children);\n  };\n\n  return TransitionGroup;\n}(_react.default.Component);\n\nTransitionGroup.childContextTypes = {\n  transitionGroup: _propTypes.default.object.isRequired\n};\nTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * `<TransitionGroup>` renders a `<div>` by default. You can change this\n   * behavior by providing a `component` prop.\n   * If you use React v16+ and would like to avoid a wrapping `<div>` element\n   * you can pass in `component={null}`. This is useful if the wrapping div\n   * borks your css styles.\n   */\n  component: _propTypes.default.any,\n\n  /**\n   * A set of `<Transition>` components, that are toggled `in` and out as they\n   * leave. the `<TransitionGroup>` will inject specific transition props, so\n   * remember to spread them through if you are wrapping the `<Transition>` as\n   * with our `<Fade>` example.\n   *\n   * While this component is meant for multiple `Transition` or `CSSTransition`\n   * children, sometimes you may want to have a single transition child with\n   * content that you want to be transitioned out and in when you change it\n   * (e.g. routes, images etc.) In that case you can change the `key` prop of\n   * the transition child as you change its content, this will cause\n   * `TransitionGroup` to transition the child out and back in.\n   */\n  children: _propTypes.default.node,\n\n  /**\n   * A convenience prop that enables or disables appear animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  appear: _propTypes.default.bool,\n\n  /**\n   * A convenience prop that enables or disables enter animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  enter: _propTypes.default.bool,\n\n  /**\n   * A convenience prop that enables or disables exit animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  exit: _propTypes.default.bool,\n\n  /**\n   * You may need to apply reactive updates to a child as it is exiting.\n   * This is generally done by using `cloneElement` however in the case of an exiting\n   * child the element has already been removed and not accessible to the consumer.\n   *\n   * If you do need to update a child as it leaves you can provide a `childFactory`\n   * to wrap every child, even the ones that are leaving.\n   *\n   * @type Function(child: ReactElement) -> ReactElement\n   */\n  childFactory: _propTypes.default.func\n} : {};\nTransitionGroup.defaultProps = defaultProps;\n\nvar _default = (0, _reactLifecyclesCompat.polyfill)(TransitionGroup);\n\nexports.default = _default;\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nvar _CSSTransition = _interopRequireDefault(require(\"./CSSTransition\"));\n\nvar _ReplaceTransition = _interopRequireDefault(require(\"./ReplaceTransition\"));\n\nvar _TransitionGroup = _interopRequireDefault(require(\"./TransitionGroup\"));\n\nvar _Transition = _interopRequireDefault(require(\"./Transition\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nmodule.exports = {\n  Transition: _Transition.default,\n  TransitionGroup: _TransitionGroup.default,\n  ReplaceTransition: _ReplaceTransition.default,\n  CSSTransition: _CSSTransition.default\n};","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar PropTypes = _interopRequireWildcard(require(\"prop-types\"));\n\nvar _addClass = _interopRequireDefault(require(\"dom-helpers/class/addClass\"));\n\nvar _removeClass = _interopRequireDefault(require(\"dom-helpers/class/removeClass\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Transition = _interopRequireDefault(require(\"./Transition\"));\n\nvar _PropTypes = require(\"./utils/PropTypes\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar addClass = function addClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return (0, _addClass.default)(node, c);\n  });\n};\n\nvar removeClass = function removeClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return (0, _removeClass.default)(node, c);\n  });\n};\n/**\n * A transition component inspired by the excellent\n * [ng-animate](http://www.nganimate.org/) library, you should use it if you're\n * using CSS transitions or animations. It's built upon the\n * [`Transition`](https://reactcommunity.org/react-transition-group/transition)\n * component, so it inherits all of its props.\n *\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\n * and `exit` states of the transition. The first class is applied and then a\n * second `*-active` class in order to activate the CSSS transition. After the\n * transition, matching `*-done` class names are applied to persist the\n * transition state.\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <CSSTransition in={inProp} timeout={200} classNames=\"my-node\">\n *         <div>\n *           {\"I'll receive my-node-* classes\"}\n *         </div>\n *       </CSSTransition>\n *       <button type=\"button\" onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the `in` prop is set to `true`, the child component will first receive\n * the class `example-enter`, then the `example-enter-active` will be added in\n * the next tick. `CSSTransition` [forces a\n * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\n * between before adding the `example-enter-active`. This is an important trick\n * because it allows us to transition between `example-enter` and\n * `example-enter-active` even though they were added immediately one after\n * another. Most notably, this is what makes it possible for us to animate\n * _appearance_.\n *\n * ```css\n * .my-node-enter {\n *   opacity: 0;\n * }\n * .my-node-enter-active {\n *   opacity: 1;\n *   transition: opacity 200ms;\n * }\n * .my-node-exit {\n *   opacity: 1;\n * }\n * .my-node-exit-active {\n *   opacity: 0;\n *   transition: opacity: 200ms;\n * }\n * ```\n *\n * `*-active` classes represent which styles you want to animate **to**.\n */\n\n\nvar CSSTransition =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(CSSTransition, _React$Component);\n\n  function CSSTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _this.onEnter = function (node, appearing) {\n      var _this$getClassNames = _this.getClassNames(appearing ? 'appear' : 'enter'),\n          className = _this$getClassNames.className;\n\n      _this.removeClasses(node, 'exit');\n\n      addClass(node, className);\n\n      if (_this.props.onEnter) {\n        _this.props.onEnter(node, appearing);\n      }\n    };\n\n    _this.onEntering = function (node, appearing) {\n      var _this$getClassNames2 = _this.getClassNames(appearing ? 'appear' : 'enter'),\n          activeClassName = _this$getClassNames2.activeClassName;\n\n      _this.reflowAndAddClass(node, activeClassName);\n\n      if (_this.props.onEntering) {\n        _this.props.onEntering(node, appearing);\n      }\n    };\n\n    _this.onEntered = function (node, appearing) {\n      var appearClassName = _this.getClassNames('appear').doneClassName;\n\n      var enterClassName = _this.getClassNames('enter').doneClassName;\n\n      var doneClassName = appearing ? appearClassName + \" \" + enterClassName : enterClassName;\n\n      _this.removeClasses(node, appearing ? 'appear' : 'enter');\n\n      addClass(node, doneClassName);\n\n      if (_this.props.onEntered) {\n        _this.props.onEntered(node, appearing);\n      }\n    };\n\n    _this.onExit = function (node) {\n      var _this$getClassNames3 = _this.getClassNames('exit'),\n          className = _this$getClassNames3.className;\n\n      _this.removeClasses(node, 'appear');\n\n      _this.removeClasses(node, 'enter');\n\n      addClass(node, className);\n\n      if (_this.props.onExit) {\n        _this.props.onExit(node);\n      }\n    };\n\n    _this.onExiting = function (node) {\n      var _this$getClassNames4 = _this.getClassNames('exit'),\n          activeClassName = _this$getClassNames4.activeClassName;\n\n      _this.reflowAndAddClass(node, activeClassName);\n\n      if (_this.props.onExiting) {\n        _this.props.onExiting(node);\n      }\n    };\n\n    _this.onExited = function (node) {\n      var _this$getClassNames5 = _this.getClassNames('exit'),\n          doneClassName = _this$getClassNames5.doneClassName;\n\n      _this.removeClasses(node, 'exit');\n\n      addClass(node, doneClassName);\n\n      if (_this.props.onExited) {\n        _this.props.onExited(node);\n      }\n    };\n\n    _this.getClassNames = function (type) {\n      var classNames = _this.props.classNames;\n      var isStringClassNames = typeof classNames === 'string';\n      var prefix = isStringClassNames && classNames ? classNames + '-' : '';\n      var className = isStringClassNames ? prefix + type : classNames[type];\n      var activeClassName = isStringClassNames ? className + '-active' : classNames[type + 'Active'];\n      var doneClassName = isStringClassNames ? className + '-done' : classNames[type + 'Done'];\n      return {\n        className: className,\n        activeClassName: activeClassName,\n        doneClassName: doneClassName\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = CSSTransition.prototype;\n\n  _proto.removeClasses = function removeClasses(node, type) {\n    var _this$getClassNames6 = this.getClassNames(type),\n        className = _this$getClassNames6.className,\n        activeClassName = _this$getClassNames6.activeClassName,\n        doneClassName = _this$getClassNames6.doneClassName;\n\n    className && removeClass(node, className);\n    activeClassName && removeClass(node, activeClassName);\n    doneClassName && removeClass(node, doneClassName);\n  };\n\n  _proto.reflowAndAddClass = function reflowAndAddClass(node, className) {\n    // This is for to force a repaint,\n    // which is necessary in order to transition styles when adding a class name.\n    if (className) {\n      /* eslint-disable no-unused-expressions */\n      node && node.scrollTop;\n      /* eslint-enable no-unused-expressions */\n\n      addClass(node, className);\n    }\n  };\n\n  _proto.render = function render() {\n    var props = _extends({}, this.props);\n\n    delete props.classNames;\n    return _react.default.createElement(_Transition.default, _extends({}, props, {\n      onEnter: this.onEnter,\n      onEntered: this.onEntered,\n      onEntering: this.onEntering,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }));\n  };\n\n  return CSSTransition;\n}(_react.default.Component);\n\nCSSTransition.defaultProps = {\n  classNames: ''\n};\nCSSTransition.propTypes = process.env.NODE_ENV !== \"production\" ? _extends({}, _Transition.default.propTypes, {\n  /**\n   * The animation classNames applied to the component as it enters, exits or\n   * has finished the transition. A single name can be provided and it will be\n   * suffixed for each stage: e.g.\n   *\n   * `classNames=\"fade\"` applies `fade-enter`, `fade-enter-active`,\n   * `fade-enter-done`, `fade-exit`, `fade-exit-active`, `fade-exit-done`,\n   * `fade-appear`, `fade-appear-active`, and `fade-appear-done`.\n   *\n   * **Note**: `fade-appear-done` and `fade-enter-done` will _both_ be applied.\n   * This allows you to define different behavior for when appearing is done and\n   * when regular entering is done, using selectors like\n   * `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply an\n   * epic entrance animation when element first appears in the DOM using\n   * [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can\n   * simply use `fade-enter-done` for defining both cases.\n   *\n   * Each individual classNames can also be specified independently like:\n   *\n   * ```js\n   * classNames={{\n   *  appear: 'my-appear',\n   *  appearActive: 'my-active-appear',\n   *  appearDone: 'my-done-appear',\n   *  enter: 'my-enter',\n   *  enterActive: 'my-active-enter',\n   *  enterDone: 'my-done-enter',\n   *  exit: 'my-exit',\n   *  exitActive: 'my-active-exit',\n   *  exitDone: 'my-done-exit',\n   * }}\n   * ```\n   *\n   * If you want to set these classes using CSS Modules:\n   *\n   * ```js\n   * import styles from './styles.css';\n   * ```\n   *\n   * you might want to use camelCase in your CSS file, that way could simply\n   * spread them instead of listing them one by one:\n   *\n   * ```js\n   * classNames={{ ...styles }}\n   * ```\n   *\n   * @type {string | {\n   *  appear?: string,\n   *  appearActive?: string,\n   *  appearDone?: string,\n   *  enter?: string,\n   *  enterActive?: string,\n   *  enterDone?: string,\n   *  exit?: string,\n   *  exitActive?: string,\n   *  exitDone?: string,\n   * }}\n   */\n  classNames: _PropTypes.classNamesShape,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is\n   * applied.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter-active' or\n   * 'appear-active' class is applied.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or\n   * 'appear' classes are **removed** and the `done` class is added to the DOM node.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' class is\n   * applied.\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' classes\n   * are **removed** and the `exit-done` class is added to the DOM node.\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExited: PropTypes.func\n}) : {};\nvar _default = CSSTransition;\nexports.default = _default;\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactDom = require(\"react-dom\");\n\nvar _TransitionGroup = _interopRequireDefault(require(\"./TransitionGroup\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n/**\n * The `<ReplaceTransition>` component is a specialized `Transition` component\n * that animates between two children.\n *\n * ```jsx\n * <ReplaceTransition in>\n *   <Fade><div>I appear first</div></Fade>\n *   <Fade><div>I replace the above</div></Fade>\n * </ReplaceTransition>\n * ```\n */\n\n\nvar ReplaceTransition =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(ReplaceTransition, _React$Component);\n\n  function ReplaceTransition() {\n    var _this;\n\n    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {\n      _args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(_args)) || this;\n\n    _this.handleEnter = function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return _this.handleLifecycle('onEnter', 0, args);\n    };\n\n    _this.handleEntering = function () {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      return _this.handleLifecycle('onEntering', 0, args);\n    };\n\n    _this.handleEntered = function () {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      return _this.handleLifecycle('onEntered', 0, args);\n    };\n\n    _this.handleExit = function () {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n\n      return _this.handleLifecycle('onExit', 1, args);\n    };\n\n    _this.handleExiting = function () {\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n\n      return _this.handleLifecycle('onExiting', 1, args);\n    };\n\n    _this.handleExited = function () {\n      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n\n      return _this.handleLifecycle('onExited', 1, args);\n    };\n\n    return _this;\n  }\n\n  var _proto = ReplaceTransition.prototype;\n\n  _proto.handleLifecycle = function handleLifecycle(handler, idx, originalArgs) {\n    var _child$props;\n\n    var children = this.props.children;\n\n    var child = _react.default.Children.toArray(children)[idx];\n\n    if (child.props[handler]) (_child$props = child.props)[handler].apply(_child$props, originalArgs);\n    if (this.props[handler]) this.props[handler]((0, _reactDom.findDOMNode)(this));\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        inProp = _this$props.in,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\"]);\n\n    var _React$Children$toArr = _react.default.Children.toArray(children),\n        first = _React$Children$toArr[0],\n        second = _React$Children$toArr[1];\n\n    delete props.onEnter;\n    delete props.onEntering;\n    delete props.onEntered;\n    delete props.onExit;\n    delete props.onExiting;\n    delete props.onExited;\n    return _react.default.createElement(_TransitionGroup.default, props, inProp ? _react.default.cloneElement(first, {\n      key: 'first',\n      onEnter: this.handleEnter,\n      onEntering: this.handleEntering,\n      onEntered: this.handleEntered\n    }) : _react.default.cloneElement(second, {\n      key: 'second',\n      onEnter: this.handleExit,\n      onEntering: this.handleExiting,\n      onEntered: this.handleExited\n    }));\n  };\n\n  return ReplaceTransition;\n}(_react.default.Component);\n\nReplaceTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  in: _propTypes.default.bool.isRequired,\n  children: function children(props, propName) {\n    if (_react.default.Children.count(props[propName]) !== 2) return new Error(\"\\\"\" + propName + \"\\\" must be exactly two transition components.\");\n    return null;\n  }\n} : {};\nvar _default = ReplaceTransition;\nexports.default = _default;\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nexports.__esModule = true;\nexports.getChildMapping = getChildMapping;\nexports.mergeChildMappings = mergeChildMappings;\nexports.getInitialChildMapping = getInitialChildMapping;\nexports.getNextChildMapping = getNextChildMapping;\n\nvar _react = require(\"react\");\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\n\n\nfunction getChildMapping(children, mapFn) {\n  var mapper = function mapper(child) {\n    return mapFn && (0, _react.isValidElement)(child) ? mapFn(child) : child;\n  };\n\n  var result = Object.create(null);\n  if (children) _react.Children.map(children, function (c) {\n    return c;\n  }).forEach(function (child) {\n    // run the map function here instead so that the key is the computed one\n    result[child.key] = mapper(child);\n  });\n  return result;\n}\n/**\n * When you're adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\n\n\nfunction mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    return key in next ? next[key] : prev[key];\n  } // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n\n\n  var nextKeysPending = Object.create(null);\n  var pendingKeys = [];\n\n  for (var prevKey in prev) {\n    if (prevKey in next) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i;\n  var childMapping = {};\n\n  for (var nextKey in next) {\n    if (nextKeysPending[nextKey]) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n\n    childMapping[nextKey] = getValueForKey(nextKey);\n  } // Finally, add the keys which didn't appear before any key in `next`\n\n\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}\n\nfunction getProp(child, prop, props) {\n  return props[prop] != null ? props[prop] : child.props[prop];\n}\n\nfunction getInitialChildMapping(props, onExited) {\n  return getChildMapping(props.children, function (child) {\n    return (0, _react.cloneElement)(child, {\n      onExited: onExited.bind(null, child),\n      in: true,\n      appear: getProp(child, 'appear', props),\n      enter: getProp(child, 'enter', props),\n      exit: getProp(child, 'exit', props)\n    });\n  });\n}\n\nfunction getNextChildMapping(nextProps, prevChildMapping, onExited) {\n  var nextChildMapping = getChildMapping(nextProps.children);\n  var children = mergeChildMappings(prevChildMapping, nextChildMapping);\n  Object.keys(children).forEach(function (key) {\n    var child = children[key];\n    if (!(0, _react.isValidElement)(child)) return;\n    var hasPrev = key in prevChildMapping;\n    var hasNext = key in nextChildMapping;\n    var prevChild = prevChildMapping[key];\n    var isLeaving = (0, _react.isValidElement)(prevChild) && !prevChild.props.in; // item is new (entering)\n\n    if (hasNext && (!hasPrev || isLeaving)) {\n      // console.log('entering', key)\n      children[key] = (0, _react.cloneElement)(child, {\n        onExited: onExited.bind(null, child),\n        in: true,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    } else if (!hasNext && hasPrev && !isLeaving) {\n      // item is old (exiting)\n      // console.log('leaving', key)\n      children[key] = (0, _react.cloneElement)(child, {\n        in: false\n      });\n    } else if (hasNext && hasPrev && (0, _react.isValidElement)(prevChild)) {\n      // item hasn't changed transition states\n      // copy over the last transition props;\n      // console.log('unchanged', key)\n      children[key] = (0, _react.cloneElement)(child, {\n        onExited: onExited.bind(null, child),\n        in: prevChild.props.in,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    }\n  });\n  return children;\n}"],"sourceRoot":""}