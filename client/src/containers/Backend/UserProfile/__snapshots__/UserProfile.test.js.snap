// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`UserProfile should match its reference snapshot 1`] = `
<div
  className="animated fadeIn user-profile"
>
  <div
    className="profile-header"
  >
    <AnchorLink
      className="header-anchor d-inline-flex justify-content-center align-items-center"
      href="#mon-profil"
      offset="120"
    >
      <EVAIcon
        className="header-icon"
        fill="#fff"
        name="settings-2-outline"
        size="medium"
      />
       
       
      <span
        className="hideOnPhone"
      >
        Tables.Mon profil
      </span>
    </AnchorLink>
    <AnchorLink
      className="header-anchor d-inline-flex justify-content-center align-items-center"
      href="#mes-favoris"
      offset="120"
    >
      <EVAIcon
        className="header-icon"
        fill="#fff"
        name="bookmark-outline"
        size="medium"
      />
       
       
      <span
        className="hideOnPhone"
      >
        Tables.Favoris
      </span>
    </AnchorLink>
    <AnchorLink
      className="header-anchor d-inline-flex justify-content-center align-items-center"
      href="#mes-contributions"
      offset="120"
    >
      <EVAIcon
        className="header-icon"
        fill="#fff"
        name="file-add-outline"
        size="medium"
      />
       
       
      <span
        className="hideOnPhone"
      >
        Tables.Rédactions
      </span>
    </AnchorLink>
    <AnchorLink
      className="header-anchor d-inline-flex justify-content-center align-items-center"
      href="#mes-traductions"
      offset="120"
    >
      <SVGIcon
        className="header-icon svgico"
        name="translate"
      />
       
       
      <span
        className="hideOnPhone"
      >
        Tables.Traductions
      </span>
    </AnchorLink>
  </div>
  <div
    className="profile-content"
    id="mon-profil"
  >
    <Row
      className="profile-info"
      tag="div"
    >
      <div
        className="profile-left mt-10"
      >
        <div
          className="shadow-wrapper"
        >
          <CardBody
            tag="div"
          >
            <div
              className="profile-header-container"
            >
              <div
                className="rank-label-container"
              >
                <img
                  alt="profile"
                  className="img-circle user-picture"
                  src="mario-profile.jpg"
                />
              </div>
            </div>
          </CardBody>
          <CardFooter
            tag="div"
          >
            <h2
              className="name"
            >
              mockUser
            </h2>
            <span
              className="status"
            >
              UserProfile.Utilisateur
            </span>
          </CardFooter>
        </div>
      </div>
      <Col
        className="modify-col mt-10"
        tag="div"
        widths={
          Array [
            "xs",
            "sm",
            "md",
            "lg",
            "xl",
          ]
        }
      >
        <withI18nextTranslation(modifyProfile)
          actions={Array []}
          actionsStruct={Array []}
          contributeur={false}
          contributions={Array []}
          contributionsStruct={Array []}
          cpassword=""
          editing={false}
          favoris={Array []}
          handleChange={[Function]}
          isDropdownOpen={Array []}
          isMainLoading={false}
          langues={Array []}
          nbReadStruct={0}
          newPassword=""
          password=""
          passwordVisible={false}
          progression={
            Object {
              "nbMots": 0,
              "nbMotsContrib": 0,
              "timeSpent": 0,
            }
          }
          selected={Object {}}
          showModal={
            Object {
              "actions": false,
              "addMember": false,
              "contributions": false,
              "devenirContributeur": false,
              "devenirTraducteur": false,
              "favori": false,
              "objectifs": false,
              "password": false,
              "suggestion": false,
              "thanks": false,
              "traducteur": false,
            }
          }
          showSections={
            Object {
              "contributions": true,
              "traductions": true,
            }
          }
          structure={Object {}}
          suggestion={Object {}}
          tempImg={null}
          toggleEditing={[Function]}
          toggleModal={[Function]}
          traducteur={false}
          traductions={Array []}
          traductionsStruct={Array []}
          uploading={false}
          user={
            Object {
              "_id": "a0000000000000000000000a",
              "contributions": Array [],
              "cookies": Object {},
              "description": "description",
              "email": "mockUser@mockUser.fr",
              "roles": Array [],
              "selectedLanguages": Array [],
              "status": "Actif",
              "structures": Array [],
              "username": "mockUser",
            }
          }
          users={Array []}
          validateProfile={[Function]}
        />
      </Col>
      <Col
        className="user-col mt-10"
        lg="12"
        md="12"
        sm="12"
        tag="div"
        widths={
          Array [
            "xs",
            "sm",
            "md",
            "lg",
            "xl",
          ]
        }
        xl="auto"
        xs="12"
      >
        <Card
          className="profile-right"
          tag="div"
        >
          <CardBody
            tag="div"
          >
            <Row
              tag="div"
            >
              <Col
                className="obj-col obj-first"
                lg="4"
                md="4"
                sm="12"
                tag="div"
                widths={
                  Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ]
                }
                xl="auto"
                xs="12"
              >
                <AnchorLink
                  href="#mes-contributions"
                  offset="120"
                >
                  <h1
                    className="title text-big"
                  >
                    0
                  </h1>
                  <h6
                    className="subtitle"
                  >
                    UserProfile.minutes données
                  </h6>
                  <span
                    className="content texte-small"
                  >
                    UserProfile.commencez à contribuer
                    .
                  </span>
                </AnchorLink>
              </Col>
              <Col
                className="obj-col obj-second"
                lg="4"
                md="4"
                sm="12"
                tag="div"
                widths={
                  Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ]
                }
                xl="auto"
                xs="12"
              >
                <AnchorLink
                  href="#mes-contributions"
                  offset="120"
                >
                  <h1
                    className="title text-big"
                  >
                    0
                  </h1>
                  <h6
                    className="subtitle"
                  >
                    UserProfile.mots écrits
                  </h6>
                  <span
                    className="content texte-small"
                  >
                    UserProfile.commencez à rédiger
                    .
                  </span>
                </AnchorLink>
              </Col>
              <Col
                className="obj-col obj-third"
                lg="4"
                md="4"
                sm="12"
                tag="div"
                widths={
                  Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ]
                }
                xl="auto"
                xs="12"
              >
                <AnchorLink
                  href="#mes-traductions"
                  offset="120"
                >
                  <h1
                    className="title text-big"
                  >
                    0
                  </h1>
                  <h6
                    className="subtitle"
                  >
                    UserProfile.mots traduits
                  </h6>
                  <span
                    className="content texte-small"
                  >
                    UserProfile.commencez à traduire
                    .
                  </span>
                </AnchorLink>
              </Col>
            </Row>
          </CardBody>
        </Card>
      </Col>
    </Row>
    <withI18nextTranslation(favoriTable)
      headers={
        Array [
          <EVAIcon
            fill="#fff"
            name="bookmark"
            size="medium"
          />,
          "Titre",
          "Thèmes",
          "Ajouté le",
          "",
          "",
        ]
      }
      limit={5}
      removeBookmark={[Function]}
      title="Favoris"
      toggleModal={[Function]}
      upcoming={[Function]}
    />
    <withI18nextTranslation(contribTable)
      dataArray={Array []}
      deleteContrib={[Function]}
      displayIndicators={true}
      headers={
        Array [
          "Titre",
          "Statut",
          "Ils rédigent avec moi",
          "",
          "",
        ]
      }
      hide={false}
      hideOnPhone={
        Array [
          false,
          false,
          true,
          false,
          false,
        ]
      }
      limit={5}
      overlayBtn="Découvrir comment contribuer"
      overlayRedirect={false}
      overlaySpan="Réfugiés-info est une plateforme contributive, vous pouvez participer à son enrichissement"
      overlayTitle="Rédigez des nouveaux contenus"
      title="Rédactions"
      toggleModal={[Function]}
      toggleSection={[Function]}
      type="user"
      user={
        Object {
          "_id": "a0000000000000000000000a",
          "contributions": Array [],
          "cookies": Object {},
          "description": "description",
          "email": "mockUser@mockUser.fr",
          "roles": Array [],
          "selectedLanguages": Array [],
          "status": "Actif",
          "structures": Array [],
          "username": "mockUser",
        }
      }
    />
    <withI18nextTranslation(tradTable)
      dataArray={Array []}
      displayIndicators={true}
      headers={
        Array [
          "Titre",
          "Statut",
          "Progression",
          "Langue",
          "Ils rédigent avec moi",
          "",
        ]
      }
      hide={false}
      hideOnPhone={
        Array [
          false,
          false,
          true,
          false,
          true,
          false,
        ]
      }
      langues={Array []}
      limit={5}
      minutesPassees={0}
      motsRediges={0}
      overlayBtn="Démarrer une session"
      overlayRedirect={false}
      overlaySpan="Bilingue ? Polyglotte ? Participez à l’effort de traduction à votre rythme :"
      overlayTitle="Aidez à traduire les contenus"
      overlayi18n="bilingue"
      title="Traductions"
      toggleModal={[Function]}
      toggleSection={[Function]}
      user={
        Object {
          "_id": "a0000000000000000000000a",
          "contributions": Array [],
          "cookies": Object {},
          "description": "description",
          "email": "mockUser@mockUser.fr",
          "roles": Array [],
          "selectedLanguages": Array [],
          "status": "Actif",
          "structures": Array [],
          "username": "mockUser",
        }
      }
    />
    <withI18nextTranslation(actionTable)
      archive={[Function]}
      dataArray={Array []}
      headers={
        Array [
          <EVAIcon
            fill="#fff"
            name="bell-outline"
            size="medium"
          />,
          "Titre",
          "Mon rôle",
          "Type",
          "Depuis",
          "",
          "",
        ]
      }
      hideOnPhone={
        Array [
          false,
          false,
          true,
          false,
          true,
          false,
          false,
        ]
      }
      limit={5}
      showSuggestion={[Function]}
      title="Notifications"
      toggleModal={[Function]}
      upcoming={[Function]}
    />
  </div>
  <Modal
    autoFocus={true}
    backdrop={true}
    backdropTransition={
      Object {
        "mountOnEnter": true,
        "timeout": 150,
      }
    }
    centered={false}
    className="modal-plus"
    fade={true}
    isOpen={false}
    keyboard={true}
    modalTransition={
      Object {
        "timeout": 300,
      }
    }
    onClosed={[Function]}
    onOpened={[Function]}
    role="dialog"
    toggle={[Function]}
    zIndex={1050}
  >
    <withI18nextTranslation(actionTable)
      archive={[Function]}
      dataArray={Array []}
      headers={
        Array [
          <EVAIcon
            fill="#fff"
            name="bell-outline"
            size="medium"
          />,
          "Titre",
          "Mon rôle",
          "Type",
          "Depuis",
          "",
          "",
        ]
      }
      hideOnPhone={
        Array [
          false,
          false,
          true,
          false,
          true,
          false,
          false,
        ]
      }
      showSuggestion={[Function]}
      title="Notifications"
      toggleModal={[Function]}
    />
  </Modal>
  <Modal
    autoFocus={true}
    backdrop={true}
    backdropTransition={
      Object {
        "mountOnEnter": true,
        "timeout": 150,
      }
    }
    centered={false}
    className="modal-plus"
    fade={true}
    isOpen={false}
    keyboard={true}
    modalTransition={
      Object {
        "timeout": 300,
      }
    }
    onClosed={[Function]}
    onOpened={[Function]}
    role="dialog"
    toggle={[Function]}
    zIndex={1050}
  >
    <withI18nextTranslation(contribTable)
      dataArray={Array []}
      deleteContrib={[Function]}
      headers={
        Array [
          "Titre",
          "Statut",
          "Ils rédigent avec moi",
          "",
          "",
        ]
      }
      hideOnPhone={
        Array [
          false,
          false,
          true,
          false,
          false,
        ]
      }
      title="Rédactions"
      toggleModal={[Function]}
      type="user"
      user={
        Object {
          "_id": "a0000000000000000000000a",
          "contributions": Array [],
          "cookies": Object {},
          "description": "description",
          "email": "mockUser@mockUser.fr",
          "roles": Array [],
          "selectedLanguages": Array [],
          "status": "Actif",
          "structures": Array [],
          "username": "mockUser",
        }
      }
    />
  </Modal>
  <Modal
    autoFocus={true}
    backdrop={true}
    backdropTransition={
      Object {
        "mountOnEnter": true,
        "timeout": 150,
      }
    }
    centered={false}
    className="modal-plus"
    fade={true}
    isOpen={false}
    keyboard={true}
    modalTransition={
      Object {
        "timeout": 300,
      }
    }
    onClosed={[Function]}
    onOpened={[Function]}
    role="dialog"
    toggle={[Function]}
    zIndex={1050}
  >
    <withI18nextTranslation(tradTable)
      dataArray={Array []}
      headers={
        Array [
          "Titre",
          "Statut",
          "Progression",
          "Langue",
          "Ils rédigent avec moi",
          "",
        ]
      }
      hideOnPhone={
        Array [
          false,
          false,
          true,
          false,
          true,
          false,
        ]
      }
      langues={Array []}
      title="Traductions"
      toggleModal={[Function]}
      user={
        Object {
          "_id": "a0000000000000000000000a",
          "contributions": Array [],
          "cookies": Object {},
          "description": "description",
          "email": "mockUser@mockUser.fr",
          "roles": Array [],
          "selectedLanguages": Array [],
          "status": "Actif",
          "structures": Array [],
          "username": "mockUser",
        }
      }
    />
  </Modal>
  <Modal
    autoFocus={true}
    backdrop={true}
    backdropTransition={
      Object {
        "mountOnEnter": true,
        "timeout": 150,
      }
    }
    centered={false}
    className="modal-plus"
    fade={true}
    isOpen={false}
    keyboard={true}
    modalTransition={
      Object {
        "timeout": 300,
      }
    }
    onClosed={[Function]}
    onOpened={[Function]}
    role="dialog"
    toggle={[Function]}
    zIndex={1050}
  >
    <withI18nextTranslation(favoriTable)
      headers={
        Array [
          <EVAIcon
            fill="#fff"
            name="bookmark"
            size="medium"
          />,
          "Titre",
          "Thèmes",
          "Ajouté le",
          "",
          "",
        ]
      }
      removeBookmark={[Function]}
      title="Favoris"
      toggleModal={[Function]}
    />
  </Modal>
  <thanksModal
    show={false}
    toggle={[Function]}
  />
  <suggestionModal
    show={false}
    suggestion={Object {}}
    toggle={[Function]}
  />
  <withRouter(withI18nextTranslation(Connect(TraducteurModal)))
    langues={Array []}
    redirect={true}
    show={false}
    toggle={[Function]}
    user={
      Object {
        "_id": "a0000000000000000000000a",
        "contributions": Array [],
        "cookies": Object {},
        "description": "description",
        "email": "mockUser@mockUser.fr",
        "roles": Array [],
        "selectedLanguages": Array [],
        "status": "Actif",
        "structures": Array [],
        "username": "mockUser",
      }
    }
  />
  <ObjectifsModal
    show={false}
    toggle={[Function]}
    validateObjectifs={[Function]}
  />
  <addMemberModal
    addMember={[Function]}
    selectItem={[Function]}
    selected={Object {}}
    show={false}
    toggle={[Function]}
    users={Array []}
  />
  <PasswordModal
    changePassword={[Function]}
    cpassword=""
    newPassword=""
    onChange={[Function]}
    onClick={[Function]}
    password=""
    passwordVisible={false}
    show={false}
    t={[Function]}
    toggle={[Function]}
  />
</div>
`;
