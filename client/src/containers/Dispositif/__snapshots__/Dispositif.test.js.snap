// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Dispositif should match its reference snapshot 1`] = `
<div
  className="animated fadeIn dispositif vue reading-mode"
  id="dispositif"
>
  <Joyride
    callback={[Function]}
    continuous={true}
    debug={false}
    disableCloseOnEsc={false}
    disableOverlay={false}
    disableOverlayClose={true}
    disableScrollParentFix={false}
    disableScrolling={false}
    getHelpers={[Function]}
    hideBackButton={false}
    joyRideWidth={800}
    mainTag={
      Object {
        "darkColor": undefined,
        "hoverColor": undefined,
        "lightColor": undefined,
      }
    }
    run={false}
    scrollOffset={20}
    scrollToFirstStep={false}
    showProgress={true}
    showSkipButton={false}
    spotlightClicks={true}
    spotlightPadding={10}
    stepIndex={0}
    steps={
      Array [
        Object {
          "content": "rédigez une courte phrase qui décrit l’action principale de votre dispositif. Nous vous conseillons de commencer la phrase par un verbe d’action à l’infinitif - rencontrer, apprendre, se former, trouver de l’aide, être accompagne, etc.",
          "disableBeacon": true,
          "locale": Object {
            "next": "Suivant",
            "skip": "Passer",
          },
          "target": "#titreInformatif",
          "title": "Titre",
        },
        Object {
          "content": "ce nom est également affiché dans les choix de recherche. Préférez la syntaxe la plus courte possible. Le champ est limité à 25 caractères.",
          "locale": Object {
            "back": "Précédent",
            "next": "Suivant",
            "skip": "Passer",
          },
          "target": "#titreMarque",
          "title": "Nom du dispositif",
        },
        Object {
          "content": "choisissez le thème principal qui caractérise le mieux votre dispositif. Puis ajoutez si besoin deux thèmes secondaires qui viennent améliorer le référencement de votre dispositif et préciser sa nature.",
          "locale": Object {
            "back": "Précédent",
            "next": "Suivant",
            "skip": "Passer",
          },
          "target": "#tags",
          "title": "Thème",
        },
        Object {
          "content": "ajouter un lien direct vers la page la plus adéquate pour vous : inscription, présentation détaillée, page facebook, etc.",
          "locale": Object {
            "back": "Précédent",
            "next": "Suivant",
            "skip": "Passer",
          },
          "target": "#input-btn",
          "title": "Lien vers le site du dispositif",
        },
        Object {
          "content": "Brève synthèse de la fiche récapitulant les points les plus importants. Deux paragraphes maximum. Nous vous conseillons de rédiger cette section en dernier.",
          "locale": Object {
            "back": "Précédent",
            "next": "Suivant",
            "skip": "Passer",
          },
          "target": "#contenu-0 .contenu",
          "title": "C’est quoi ?",
        },
        Object {
          "content": "Ajoutez autant de carte que nécessaire pour expliciter les conditions d’accès au dispositif. Passez la souris sur chaque carte pour avoir des consignes détaillées.",
          "locale": Object {
            "back": "Précédent",
            "next": "Suivant",
            "skip": "Passer",
          },
          "target": "#contenu-1 #info-card-1-1",
          "title": "C’est pour qui ?",
        },
        Object {
          "content": "ajoutez jusqu’à 5 arguments principaux pour convaincre l’utilisateur de vous rejoindre. Chaque titre d’accordéon doit être compréhensible sans avoir à lire son contenu. N’hésitez pas à faire des sous-arguments à l’aide des listes à puce.",
          "locale": Object {
            "back": "Précédent",
            "next": "Suivant",
            "skip": "Passer",
          },
          "target": "#contenu-2 .accordeon-col",
          "title": "Pourquoi ?",
        },
        Object {
          "content": "détaillez les différentes étapes pour accéder à votre dispositif : annuaire, prise de contact, premiers rendez-vous, formulaires d’inscriptions, etc. Vous pouvez ajouter une carte interactive pour cartographier vos points de contacts.",
          "locale": Object {
            "back": "Précédent",
            "next": "Suivant",
            "skip": "Passer",
          },
          "target": "#contenu-3 .accordeon-col",
          "title": "Comment ?",
        },
        Object {
          "content": "ajoutez des points de contacts géolocalisés en recherchant une adresse dans la barre de recherche Google Maps. Puis saisissez les informations du point de contact. Vous pouvez également importer massivement des contacts.",
          "locale": Object {
            "back": "Précédent",
            "next": "Suivant",
            "skip": "Passer",
          },
          "placement": "bottom",
          "target": "#map-paragraphe",
          "title": "Carte interactive",
        },
        Object {
          "content": "ajoutez le logo de votre/vos structures. Attention : seul les fichiers .png, .jpg et .svg sont compatibles. Un lien vers le site de la structure et un texte alternatif à l’image vous est également demandé.",
          "locale": Object {
            "back": "Précédent",
            "last": "Terminer",
            "next": "Suivant",
            "skip": "Passer",
          },
          "placement": "top",
          "target": ".sponsor-footer",
          "title": "Structure responsable",
        },
      ]
    }
    styles={
      Object {
        "options": Object {
          "arrowColor": undefined,
        },
      }
    }
    tooltipComponent={[Function]}
  />
  <Row
    className="main-row"
    tag="div"
  >
    <Col
      className="main-col"
      lg="12"
      md="12"
      sm="12"
      tag="div"
      widths={
        Array [
          "xs",
          "sm",
          "md",
          "lg",
          "xl",
        ]
      }
      xl="12"
      xs="12"
    >
      <section
        className="banniere-dispo"
      >
        <Row
          className="header-row"
          tag="div"
        >
          <Col
            className="top-left"
            lg="6"
            md="6"
            onClick={[Function]}
            sm="6"
            tag="div"
            widths={
              Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ]
            }
            xl="6"
            xs="12"
          >
            <FButton
              className="btn-retour"
              name="arrow-back"
              tag="button"
              type="light-action"
            >
              <span>
                Retour à la recherche
              </span>
            </FButton>
          </Col>
          <topRightHeader
            bookmarkDispositif={[Function]}
            disableEdit={true}
            editDispositif={[Function]}
            mainSponsor={Object {}}
            pinned={false}
            showSpinnerBookmark={false}
            status=""
            toggleDispositifCreateModal={[Function]}
            toggleDispositifValidateModal={[Function]}
            toggleHelp={[Function]}
            toggleModal={[Function]}
            update_status={[Function]}
            validateStructure={false}
            valider_dispositif={[Function]}
            withHelp={true}
          />
        </Row>
        <Col
          className="post-title-block"
          lg="12"
          md="12"
          sm="12"
          tag="div"
          widths={
            Array [
              "xs",
              "sm",
              "md",
              "lg",
              "xl",
            ]
          }
          xs="12"
        >
          <div
            className="bloc-titre"
          >
            <h1
              className=""
            >
              <ContentEditable
                disabled={true}
                html="Titre informatif"
                id="titreInformatif"
                onChange={[Function]}
                onClick={[Function]}
                onKeyPress={[Function]}
                onMouseEnter={[Function]}
              />
            </h1>
            <h2
              className="bloc-subtitle"
            >
              <span>
                avec
                 
              </span>
              <ContentEditable
                disabled={true}
                html="Le nom du dispositif"
                id="titreMarque"
                onChange={[Function]}
                onClick={[Function]}
                onKeyDown={[Function]}
                onKeyPress={[Function]}
                onMouseEnter={[Function]}
              />
            </h2>
          </div>
        </Col>
      </section>
      <Row
        className="tags-row backgroundColor-darkColor"
        tag="div"
      >
        <Col
          className="col right-bar"
          lg="8"
          md="8"
          sm="8"
          tag="div"
          widths={
            Array [
              "xs",
              "sm",
              "md",
              "lg",
              "xl",
            ]
          }
          xs="8"
        >
          <Row
            tag="div"
          >
            <b
              className="en-bref mt-10"
            >
              En bref
               
            </b>
          </Row>
        </Col>
        <Col
          className="tags-bloc"
          lg="4"
          md="4"
          sm="4"
          tag="div"
          widths={
            Array [
              "xs",
              "sm",
              "md",
              "lg",
              "xl",
            ]
          }
          xs="4"
        >
          <withI18nextTranslation(Tags)
            addTag={[Function]}
            changeTag={[Function]}
            deleteTag={[Function]}
            disableEdit={true}
            filtres={
              Array [
                Object {
                  "darkColor": "#3E2884",
                  "hoverColor": "#3E2884",
                  "illustrationColor": "#F9AA38",
                  "lightColor": "#F0E8F5",
                  "name": "apprendre le français",
                  "short": "Français",
                },
                Object {
                  "darkColor": "#188CC6",
                  "hoverColor": "#188CC6",
                  "illustrationColor": "#F77B0B",
                  "lightColor": "#DDF3FA",
                  "name": "me loger",
                  "short": "Logement",
                },
                Object {
                  "darkColor": "#149295",
                  "hoverColor": "#4FD3BD",
                  "illustrationColor": "#DD0539",
                  "lightColor": "#D6EFF4",
                  "name": "trouver un travail",
                  "short": "Insertion pro",
                },
                Object {
                  "darkColor": "#137F3A",
                  "hoverColor": "#7DC690",
                  "illustrationColor": "#FC1E73",
                  "lightColor": "#E8F4E9",
                  "name": "apprendre un métier",
                  "short": "Formation pro",
                },
                Object {
                  "darkColor": "#307205",
                  "hoverColor": "#ADEA5C",
                  "illustrationColor": "#E561D8",
                  "lightColor": "#E8F7CD",
                  "name": "faire des études",
                  "short": "Études",
                },
                Object {
                  "darkColor": "#F97821",
                  "hoverColor": "#F9D1B7",
                  "illustrationColor": "#5435D6",
                  "lightColor": "#FFF0E7",
                  "name": "me déplacer",
                  "short": "Mobilité",
                },
                Object {
                  "darkColor": "#0A54BF",
                  "hoverColor": "#FDA8AD",
                  "illustrationColor": "#1FC2C1",
                  "lightColor": "#FFEEEE",
                  "name": "aider une association",
                  "short": "Bénévolat",
                },
                Object {
                  "darkColor": "#8E1B5A",
                  "hoverColor": "#FDA5C4",
                  "illustrationColor": "#76D327",
                  "lightColor": "#FFEBF5",
                  "name": "rencontrer des gens",
                  "short": "Rencontre",
                },
                Object {
                  "darkColor": "#861B8E",
                  "hoverColor": "#E595F9",
                  "illustrationColor": "#FCBF35",
                  "lightColor": "#F6E6FC",
                  "name": "occuper mon temps libre",
                  "short": "Loisir",
                },
                Object {
                  "darkColor": "#ED4C26",
                  "hoverColor": "#FEC396",
                  "illustrationColor": "#1898FC",
                  "lightColor": "#FFF0E7",
                  "name": "découvrir la culture",
                  "short": "Culture",
                },
                Object {
                  "darkColor": "#C6093F",
                  "hoverColor": "#F7698E",
                  "illustrationColor": "#1FC2C1",
                  "lightColor": "#FFEEEE",
                  "name": "me soigner",
                  "short": "Santé",
                },
              ]
            }
            history={
              Object {
                "push": [Function],
              }
            }
            tags={Array []}
          />
        </Col>
      </Row>
      <Row
        className="no-margin-right"
        tag="div"
      >
        <Col
          className="left-side-col pt-40"
          lg="3"
          md="12"
          sm="12"
          tag="div"
          widths={
            Array [
              "xs",
              "sm",
              "md",
              "lg",
              "xl",
            ]
          }
          xl="3"
          xs="12"
        >
          <withI18nextTranslation(leftSideDispositif)
            accordion={
              Array [
                false,
              ]
            }
            content={
              Object {
                "abstract": "",
                "contact": "contact@lab-r.fr",
                "externalLink": "",
                "titreInformatif": "Titre informatif",
                "titreMarque": "Le nom du dispositif",
              }
            }
            createPdf={[Function]}
            disableEdit={true}
            handleChange={[Function]}
            inputBtnClicked={false}
            menu={Array []}
            newRef={
              Object {
                "current": null,
              }
            }
            send_sms={[Function]}
            showSpinner={false}
            toggleInputBtnClicked={[Function]}
            typeContenu="dispositif"
          />
        </Col>
        <Col
          className="pt-40 col-middle"
          lg="7"
          md="10"
          sm="10"
          tag="div"
          widths={
            Array [
              "xs",
              "sm",
              "md",
              "lg",
              "xl",
            ]
          }
          xl="7"
          xs="10"
        >
          <Row
            className="fiabilite-row"
            tag="div"
          >
            <Col
              className="col align-right"
              lg="auto"
              md="auto"
              sm="auto"
              tag="div"
              widths={
                Array [
                  "xs",
                  "sm",
                  "md",
                  "lg",
                  "xl",
                ]
              }
              xs="auto"
            >
              Dernière mise à jour
               : 
              <span
                className="date-maj"
              >
                1 janv. 1970
              </span>
            </Col>
            <Col
              className="col"
              tag="div"
              widths={
                Array [
                  "xs",
                  "sm",
                  "md",
                  "lg",
                  "xl",
                ]
              }
            >
              Fiabilité de l'information
               : 
              <span
                className="fiabilite color-rouge"
              >
                Faible
              </span>
            </Col>
          </Row>
          <withI18nextTranslation(contenuDispositif)
            accordion={
              Array [
                false,
              ]
            }
            addItem={[Function]}
            allDemarches={Array []}
            changeAge={[Function]}
            changePrice={[Function]}
            changeTitle={[Function]}
            checkingVariante={false}
            content={
              Object {
                "abstract": "",
                "contact": "contact@lab-r.fr",
                "externalLink": "",
                "titreInformatif": "Titre informatif",
                "titreMarque": "Le nom du dispositif",
              }
            }
            contributeurs={Array []}
            deleteCard={[Function]}
            demarcheId={null}
            demarcheSteps={
              Object {
                "options": Array [
                  Object {
                    "checkbox": "Je ne connais pas le lien exact à ajouter",
                    "ctaField": "value2",
                    "ctaText": "Évaluer mes droits en ligne",
                    "icon1": "link-2",
                    "icon2": "external-link",
                    "label1": "Lien vers la démarche :",
                    "label2": "Texte sur le bouton :",
                    "logo": "at",
                    "modalHeader": "Clique sur ce lien",
                    "placeholder1": "Copiez-collez ici l’URL de votre lien",
                    "placeholder2": "Ex : “Évaluer mes droits en ligne”",
                    "texte": "En ligne",
                  },
                  Object {
                    "checkbox": "Je ne connais pas l’adresse exacte à ajouter",
                    "ctaField": "value1",
                    "ctaText": "Voir l’adresse",
                    "icon1": "pin",
                    "label1": "Adresse :",
                    "label2": null,
                    "logo": "pin",
                    "modalHeader": "Ton lieu de rendez-vous est",
                    "placeholder1": "Indiquez ici l’adresse à laquelle les usagers doivent se rendre",
                    "placeholder2": null,
                    "texte": "En physique",
                  },
                  Object {
                    "checkbox": "Je ne connais pas le numéro exact à ajouter",
                    "ctaText": "Voir le numéro de téléphone",
                    "icon1": "phone-call",
                    "label1": "Numéro :",
                    "label2": null,
                    "logo": "phone-call",
                    "modalHeader": "Numéro à appeler",
                    "placeholder1": "Insérez ici le numéro de téléphone à faire composer aux usagers",
                    "placeholder2": null,
                    "texte": "Par téléphone",
                  },
                  Object {
                    "checkbox": "Je ne connais pas l’adresse postale exacte à ajouter",
                    "ctaText": "Voir l’adresse postale",
                    "icon1": "home",
                    "icon2": "hash",
                    "icon3": "pin",
                    "icon4": "hash",
                    "label1": null,
                    "label2": null,
                    "logo": "email",
                    "modalHeader": "Ton courrier doit être adressé à",
                    "placeholder1": "Numéro et libéllé de la voie",
                    "placeholder2": "Code postal",
                    "placeholder3": "Ville",
                    "placeholder4": "Cedex",
                    "texte": "Par courrier",
                  },
                  Object {
                    "ctaText": "Bouton personnalisé",
                    "label1": "Indiquez en deux mots le type de démarche que vous demandez à l’usager :",
                    "label2": null,
                    "logo": "alert-triangle",
                    "modalHeader": "Ce que tu dois faire",
                    "placeholder1": "Type de démarche",
                    "placeholder2": "Expliquez maintenant les détails de l’action à réaliser pour réaliser l’étape",
                    "texte": "Autre",
                  },
                ],
                "papiers": Array [
                  Object {
                    "texte": "Acte de naissance",
                  },
                  Object {
                    "texte": "Attestation CAF",
                  },
                  Object {
                    "texte": "Attestation CMU-C",
                  },
                  Object {
                    "texte": "Attestation de diplôme ou d’équivalence",
                  },
                  Object {
                    "texte": "Avis de taxe foncière",
                  },
                  Object {
                    "texte": "Avis d’imposition",
                  },
                  Object {
                    "texte": "Carte de bénéficiaire de l’AME",
                  },
                  Object {
                    "texte": "Carte de mutuelle",
                  },
                  Object {
                    "texte": "Carte de résident",
                  },
                  Object {
                    "texte": "Carte Vitale",
                  },
                  Object {
                    "texte": "Curriculum Vitae (CV)",
                  },
                  Object {
                    "texte": "Justificatif d’abonnement transport",
                  },
                  Object {
                    "texte": "Justificatif de domicile",
                  },
                  Object {
                    "texte": "Passeport",
                  },
                  Object {
                    "texte": "Permis de conduire",
                  },
                  Object {
                    "texte": "Récépissé de la demande d’asile",
                  },
                  Object {
                    "texte": "Récépissé de demande de titre de séjour ",
                  },
                  Object {
                    "texte": "Relevé d’identité bancaire (RIB)",
                  },
                  Object {
                    "texte": "Titre de séjour",
                  },
                ],
                "timeSteps": Array [
                  Object {
                    "texte": "secondes",
                  },
                  Object {
                    "texte": "minutes",
                  },
                  Object {
                    "texte": "heures",
                  },
                  Object {
                    "texte": "jours",
                  },
                  Object {
                    "texte": "mois",
                  },
                  Object {
                    "texte": "ans",
                  },
                ],
              }
            }
            didThank={false}
            disableEdit={true}
            disableIsMapLoaded={[Function]}
            disableOverlay={false}
            dispositif={Object {}}
            dropdown={
              Array [
                false,
                false,
                false,
                false,
                false,
              ]
            }
            filtres={
              Object {
                "audience": Array [
                  "réfugié",
                  "tout public",
                ],
                "audienceAge": Array [
                  "De ** à ** ans",
                  "Moins de ** ans",
                  "Plus de ** ans",
                ],
                "justificatifs": Array [
                  "Titre de séjour",
                  "Justificatif de domicile",
                  "Diplôme",
                  "Permis de conduire",
                ],
                "niveauFrancais": Array [
                  "Débutant",
                  "Intermédiaire",
                  "Avancé",
                  "Tous les niveaux",
                ],
                "tags": Array [
                  Object {
                    "darkColor": "#3E2884",
                    "hoverColor": "#3E2884",
                    "illustrationColor": "#F9AA38",
                    "lightColor": "#F0E8F5",
                    "name": "apprendre le français",
                    "short": "Français",
                  },
                  Object {
                    "darkColor": "#188CC6",
                    "hoverColor": "#188CC6",
                    "illustrationColor": "#F77B0B",
                    "lightColor": "#DDF3FA",
                    "name": "me loger",
                    "short": "Logement",
                  },
                  Object {
                    "darkColor": "#149295",
                    "hoverColor": "#4FD3BD",
                    "illustrationColor": "#DD0539",
                    "lightColor": "#D6EFF4",
                    "name": "trouver un travail",
                    "short": "Insertion pro",
                  },
                  Object {
                    "darkColor": "#137F3A",
                    "hoverColor": "#7DC690",
                    "illustrationColor": "#FC1E73",
                    "lightColor": "#E8F4E9",
                    "name": "apprendre un métier",
                    "short": "Formation pro",
                  },
                  Object {
                    "darkColor": "#307205",
                    "hoverColor": "#ADEA5C",
                    "illustrationColor": "#E561D8",
                    "lightColor": "#E8F7CD",
                    "name": "faire des études",
                    "short": "Études",
                  },
                  Object {
                    "darkColor": "#F97821",
                    "hoverColor": "#F9D1B7",
                    "illustrationColor": "#5435D6",
                    "lightColor": "#FFF0E7",
                    "name": "me déplacer",
                    "short": "Mobilité",
                  },
                  Object {
                    "darkColor": "#0A54BF",
                    "hoverColor": "#FDA8AD",
                    "illustrationColor": "#1FC2C1",
                    "lightColor": "#FFEEEE",
                    "name": "aider une association",
                    "short": "Bénévolat",
                  },
                  Object {
                    "darkColor": "#8E1B5A",
                    "hoverColor": "#FDA5C4",
                    "illustrationColor": "#76D327",
                    "lightColor": "#FFEBF5",
                    "name": "rencontrer des gens",
                    "short": "Rencontre",
                  },
                  Object {
                    "darkColor": "#861B8E",
                    "hoverColor": "#E595F9",
                    "illustrationColor": "#FCBF35",
                    "lightColor": "#F6E6FC",
                    "name": "occuper mon temps libre",
                    "short": "Loisir",
                  },
                  Object {
                    "darkColor": "#ED4C26",
                    "hoverColor": "#FEC396",
                    "illustrationColor": "#1898FC",
                    "lightColor": "#FFF0E7",
                    "name": "découvrir la culture",
                    "short": "Culture",
                  },
                  Object {
                    "darkColor": "#C6093F",
                    "hoverColor": "#F7698E",
                    "illustrationColor": "#1FC2C1",
                    "lightColor": "#FFEEEE",
                    "name": "me soigner",
                    "short": "Santé",
                  },
                ],
              }
            }
            handleContentClick={[Function]}
            handleMenuChange={[Function]}
            inVariante={false}
            initialTime={0}
            inputBtnClicked={false}
            isAuth={false}
            isDispositifLoading={true}
            isVarianteValidated={false}
            joyRideWidth={800}
            mail=""
            mainSponsor={Object {}}
            mainTag={
              Object {
                "darkColor": undefined,
                "hoverColor": undefined,
                "lightColor": undefined,
              }
            }
            menu={Array []}
            onEditorStateChange={[Function]}
            pinned={false}
            printing={false}
            readAudio={[Function]}
            removeItem={[Function]}
            runFirstJoyRide={false}
            runJoyRide={false}
            search={Object {}}
            setMarkers={[Function]}
            showBookmarkModal={false}
            showDispositifCreateModal={false}
            showDispositifValidateModal={false}
            showModals={
              Object {
                "allGood": false,
                "construction": false,
                "fiabilite": false,
                "map": false,
                "merci": false,
                "question": false,
                "reaction": false,
                "responsable": false,
                "signaler": false,
                "suggerer": false,
                "variante": false,
              }
            }
            showSpinnerBookmark={false}
            showSpinnerPrint={false}
            sponsors={Array []}
            status=""
            stepIndex={0}
            suggestion=""
            tKeyValue={-1}
            tSubkey={-1}
            tags={Array []}
            time={0}
            toggleFree={[Function]}
            toggleModal={[Function]}
            toggleNiveau={[Function]}
            tooltipOpen={false}
            typeContenu="dispositif"
            uiArray={
              Array [
                Object {
                  "accordion": false,
                  "addDropdown": false,
                  "cardDropdown": false,
                  "isHover": false,
                  "varianteSelected": false,
                },
                Object {
                  "accordion": false,
                  "addDropdown": false,
                  "cardDropdown": false,
                  "isHover": false,
                  "varianteSelected": false,
                },
                Object {
                  "accordion": false,
                  "addDropdown": false,
                  "cardDropdown": false,
                  "isHover": false,
                  "varianteSelected": false,
                },
                Object {
                  "accordion": false,
                  "addDropdown": false,
                  "cardDropdown": false,
                  "isHover": false,
                  "varianteSelected": false,
                },
              ]
            }
            upcoming={[Function]}
            updateUIArray={[Function]}
            user={Object {}}
            variantes={Array []}
            withHelp={true}
          />
          <div
            className="feedback-footer"
          >
            <div>
              <h5
                className="color-darkColor"
              >
                Dispositif.informations_utiles
              </h5>
              <span
                className="color-darkColor"
              >
                Dispositif.remerciez
                 :
              </span>
            </div>
            <div>
              <FButton
                className="thanks"
                onClick={[Function]}
                tag="button"
                type="default"
              >
                Merci
              </FButton>
            </div>
          </div>
          <div
            className="discussion-footer backgroundColor-darkColor"
          >
            <h5>
              Dispositif.Avis
            </h5>
            <span>
              Bientôt disponible !
            </span>
          </div>
          <Connect(Sponsors)
            addSponsor={[Function]}
            deleteSponsor={[Function]}
            disableEdit={true}
            sponsors={Array []}
            t={[Function]}
          />
        </Col>
        <Col
          className="aside-right pt-40"
          lg="2"
          md="2"
          sm="2"
          tag="div"
          widths={
            Array [
              "xs",
              "sm",
              "md",
              "lg",
              "xl",
            ]
          }
          xl="2"
          xs="2"
        />
      </Row>
      <withI18nextTranslation(reagirModal)
        name="reaction"
        onValidate={[Function]}
        show={false}
        toggleModal={[Function]}
      />
      <withI18nextTranslation(suggererModal)
        onChange={[Function]}
        onValidate={[Function]}
        showModals={
          Object {
            "allGood": false,
            "construction": false,
            "fiabilite": false,
            "map": false,
            "merci": false,
            "question": false,
            "reaction": false,
            "responsable": false,
            "signaler": false,
            "suggerer": false,
            "variante": false,
          }
        }
        suggestion=""
        toggleModal={[Function]}
      />
      <merciModal
        mail=""
        name="merci"
        onChange={[Function]}
        show={false}
        toggleModal={[Function]}
      />
      <enConstructionModal
        name="construction"
        show={false}
        toggleModal={[Function]}
      />
      <ResponsableModal
        editDispositif={[Function]}
        mainSponsor={Object {}}
        name="responsable"
        show={false}
        sponsors={Array []}
        toggleModal={[Function]}
        update_status={[Function]}
      />
      <Modal
        autoFocus={true}
        backdrop={true}
        backdropTransition={
          Object {
            "mountOnEnter": true,
            "timeout": 150,
          }
        }
        centered={false}
        className="modal-fiabilite"
        fade={true}
        isOpen={false}
        keyboard={true}
        modalTransition={
          Object {
            "timeout": 300,
          }
        }
        onClosed={[Function]}
        onOpened={[Function]}
        role="dialog"
        toggle={[Function]}
        zIndex={1050}
      >
        <h1>
          Dispositif.fiabilite
        </h1>
        <div
          className="liste-fiabilite"
        >
          <Row
            tag="div"
          >
            <Col
              className="make-it-red"
              lg="4"
              tag="div"
              widths={
                Array [
                  "xs",
                  "sm",
                  "md",
                  "lg",
                  "xl",
                ]
              }
            >
              Faible
            </Col>
            <Col
              lg="8"
              tag="div"
              widths={
                Array [
                  "xs",
                  "sm",
                  "md",
                  "lg",
                  "xl",
                ]
              }
            >
              L’information a été rédigée par un contributeur qui n’est pas directement responsable et n’a pas été validée par l’autorité compétente.
            </Col>
          </Row>
          <Row
            tag="div"
          >
            <Col
              className="make-it-orange"
              lg="4"
              tag="div"
              widths={
                Array [
                  "xs",
                  "sm",
                  "md",
                  "lg",
                  "xl",
                ]
              }
            >
              Moyenne
            </Col>
            <Col
              lg="8"
              tag="div"
              widths={
                Array [
                  "xs",
                  "sm",
                  "md",
                  "lg",
                  "xl",
                ]
              }
            >
              L’information a été rédigée par un contributeur qui n’est pas directement responsable et n’a pas été validée par l’autorité compétente.
            </Col>
          </Row>
          <Row
            tag="div"
          >
            <Col
              className="make-it-green"
              lg="4"
              tag="div"
              widths={
                Array [
                  "xs",
                  "sm",
                  "md",
                  "lg",
                  "xl",
                ]
              }
            >
              Forte
            </Col>
            <Col
              lg="8"
              tag="div"
              widths={
                Array [
                  "xs",
                  "sm",
                  "md",
                  "lg",
                  "xl",
                ]
              }
            >
              L’information a été rédigée par un contributeur qui n’est pas directement responsable et n’a pas été validée par l’autorité compétente.
            </Col>
          </Row>
        </div>
      </Modal>
      <bookmarkedModal
        show={false}
        success={false}
        toggle={[Function]}
      />
      <DispositifCreateModal
        onBoardSteps={
          Array [
            Object {
              "firstStep": true,
              "title": "C’est parti !",
            },
            Object {
              "content": <h5>
                Cliquez sur les éléments surlignés 
                <span
                  className="texte-jaune"
                >
                  en jaune
                </span>
                 pour saisir votre texte.
              </h5>,
              "title": "Modifiez directement le texte",
            },
            Object {
              "content": <h5>
                Des consignes sont proposées pour chaque 
                <span
                  className="texte-jaune"
                >
                  élément modifiable
                </span>
                .
              </h5>,
              "title": "Suivez le guide",
            },
            Object {
              "content": <h5>
                Ce menu vous suit dans votre rédaction. Vous pouvez désactiver les consignes, sauvegarder votre brouillon et accéder à 
                <span
                  className="texte-rouge"
                >
                  plus d’aide
                </span>
                .
              </h5>,
              "title": "Tout à portée de main",
            },
          ]
        }
        show={false}
        startFirstJoyRide={[Function]}
        toggle={[Function]}
        typeContenu="dispositif"
      />
      <dispositifValidateModal
        abstract=""
        onChange={[Function]}
        show={false}
        toggle={[Function]}
        validate={[Function]}
      />
      <VarianteCreateModal
        show={false}
        titreInformatif="Titre informatif"
        toggle={[Function]}
        upcoming={[Function]}
      />
      <NotificationContainer
        enterTimeout={400}
        leaveTimeout={400}
      />
      <div
        className="ecran-protection no-main"
      >
        <div
          className="content-wrapper"
        >
          <h1
            className="mb-3"
          >
            Chargement
            ...
          </h1>
          <Spinner
            color="success"
            tag="div"
            type="border"
          >
            Loading...
          </Spinner>
        </div>
      </div>
    </Col>
  </Row>
</div>
`;
