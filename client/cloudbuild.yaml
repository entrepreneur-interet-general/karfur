steps:
  # Install necessary npm packages
  - name: "node:10"
    entrypoint: npm
    args: ["install"]
    dir: "client"
  # Retrieve secrets
  - name: gcr.io/cloud-builders/gcloud
    entrypoint: bash
    args:
      [
        "-c",
        "for secret in $(gcloud secrets list --filter=\"labels.environment~${_ENV}|common\" --filter=\"labels.component~${_COMPONENT}|common\" --format=\"value(NAME)\"); do echo export $secret=\\\"$(gcloud secrets versions access --secret=$secret latest)\\\" >> build.env; done",
      ]
    dir: "client"
  # Retrieve non open source fonts
  - name: gcr.io/cloud-builders/gsutil
    entrypoint: bash
    args:
      [
        "-c",
        'mkdir -p ${_FONTS_TARGET_DIRECTORY} && gsutil cp "${_PRIVATE_BUCKET_URL}/fonts/*" ${_FONTS_TARGET_DIRECTORY}',
      ]
  # Generate static resources
  - name: "node:10"
    entrypoint: bash
    args:
      [
        "-c",
        "sed -i 's/_${_ENV}//gi' build.env && source build.env && npm run build",
      ]
    dir: "client"
    env:
      - "REACT_APP_ENV=$_REACT_APP_ENV"
      - "REACT_APP_SERVER_URL=$_REACT_APP_SERVER_URL"
  # Sync static content with the frontend bucket
  - name: gcr.io/cloud-builders/gsutil
    entrypoint: bash
    args:
      [
        "-c",
        "apt-get update && apt-get -y install locales && sed -i 's/# fr_FR.UTF-8 UTF-8/fr_FR.UTF-8 UTF-8/' /etc/locale.gen && locale-gen && gsutil -m rsync -r -c -d client/build ${_BUCKET_URL}",
      ]
    env:
      - "LANG=fr_FR.UTF-8"
timeout: "1200s"
